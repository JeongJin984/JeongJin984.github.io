I"^<h1 id="keras"><strong>Keras</strong></h1>
<hr />

<h2 id="keras-1">Keras</h2>
<blockquote>
  <p>파이썬 기반의 쉽고 간결한 딥러닝 라이브러리</p>
</blockquote>

<ul>
  <li>모듈화: 제공 모듈은 독립적이고, 설정 가능하며 제약이 적음</li>
  <li>단순성: 간결하고 이해가 쉬우나 속도와 혁신성은 떨어질 수 있음</li>
  <li>확장성: 새로운 클래스 및 함수로 모듈 추가 가능</li>
</ul>

<h2 id="구성">구성</h2>
<ul>
  <li>모델
    <ul>
      <li>가장 핵심적인 데이터 구조</li>
      <li>순차적(Sequential) 모델로 레이어를 쉽게 쌓을 수 있음</li>
      <li>다중 출력 등 복잡한 모델은 Keras 함수 API 사용</li>
    </ul>
  </li>
  <li>학습 과정
    <ol>
      <li>데이터 생성</li>
      <li>모델 구성
        <ul>
          <li>Sequentail()모델 또는 Keras 함수 API</li>
        </ul>
      </li>
      <li>모델 학습 과정 설정
        <ul>
          <li>Compile() 함수 사용</li>
        </ul>
      </li>
      <li>모델 학습
        <ul>
          <li>fit() 함수 사용</li>
        </ul>
      </li>
      <li>모델 평가
        <ul>
          <li>evaluate() 함수 사용</li>
        </ul>
      </li>
      <li>모델 사용
        <ul>
          <li>predict() 함수 사용</li>
        </ul>
      </li>
    </ol>
  </li>
  <li>Layers
    <ul>
      <li>신경망 계층 관련 클래스
        <ul>
          <li>Dense, Activation, Dropout, …</li>
        </ul>
      </li>
      <li>각 클래스 객체의 주요 메소드 함수
        <ul>
          <li>Layers.get_weights(), layer.set_weights(), …</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Processing
    <ul>
      <li>텍스트, 이미지 전처리 관련 클래스</li>
    </ul>
  </li>
  <li>Datasets
    <ul>
      <li>MNIST, CIFAR10, IMDB 등 데이터셋 관련 클래스</li>
    </ul>
  </li>
  <li>Utils
    <ul>
      <li>데이터 정규화, 데이터 표현, 파일 처리, 다중 GPU 처리 등…</li>
    </ul>
  </li>
  <li>기타
    <ul>
      <li>Losses, Callbacks, Optimizers, Activations, Visualizations, …</li>
    </ul>
  </li>
</ul>

<h2 id="예제-코드">예제 코드</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td> --><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>

<span class="n">mnist</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">datasets</span><span class="p">.</span><span class="n">mnist</span>  <span class="c1"># 28x28 images of hand-written digits 0-9
</span>
<span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">),</span> <span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)</span> <span class="o">=</span> <span class="n">mnist</span><span class="p">.</span><span class="n">load_data</span><span class="p">()</span>

<span class="n">x_train</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">utils</span><span class="p">.</span><span class="n">normalize</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">x_test</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">utils</span><span class="p">.</span><span class="n">normalize</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">models</span><span class="p">.</span><span class="n">Sequential</span><span class="p">()</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Flatten</span><span class="p">(</span><span class="n">input_shape</span><span class="o">=</span><span class="n">x_train</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">shape</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">relu</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">relu</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">softmax</span><span class="p">))</span>

<span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span> <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
             <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">])</span>

<span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">validation_split</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span>

<span class="n">predictions</span> <span class="o">=</span> <span class="n">model_reloaded</span><span class="p">.</span><span class="n">predict</span><span class="p">([</span><span class="n">x_test</span><span class="p">])</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET