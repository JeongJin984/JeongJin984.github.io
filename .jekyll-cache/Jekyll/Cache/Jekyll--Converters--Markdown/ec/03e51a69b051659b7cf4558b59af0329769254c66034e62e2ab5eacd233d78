I"º6<h1 id="ÏÑ¨Ïùò-Í∞ØÏàò"><strong>ÏÑ¨Ïùò Í∞ØÏàò</strong></h1>
<hr />
<h2 id="ÏΩîÎìú"><strong>ÏΩîÎìú</strong></h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="kd">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">boolean</span><span class="o">[][]</span> <span class="n">visited</span><span class="o">;</span>

    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result1</span><span class="o">;</span>
    <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">static</span> <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="n">height</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">di</span> <span class="o">=</span> <span class="o">{-</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span> <span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span>  <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>  <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">};</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dj</span> <span class="o">=</span> <span class="o">{-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span> <span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">};</span>

    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">DFS</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="mi">8</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">newI</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">di</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
            <span class="kt">int</span> <span class="n">newJ</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">dj</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>

            <span class="k">if</span><span class="o">(</span><span class="n">newI</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">newI</span><span class="o">&lt;</span><span class="n">height</span> <span class="o">&amp;&amp;</span> <span class="n">newJ</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">newJ</span><span class="o">&lt;</span><span class="n">width</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">visited</span><span class="o">[</span><span class="n">newI</span><span class="o">][</span><span class="n">newJ</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">map</span><span class="o">[</span><span class="n">newI</span><span class="o">][</span><span class="n">newJ</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="no">DFS</span><span class="o">(</span><span class="n">newI</span><span class="o">,</span> <span class="n">newJ</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
	<span class="c1">// write your code here</span>
        <span class="nc">Scanner</span> <span class="n">scanner</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>

        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>

        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">width</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="n">height</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="n">result1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

            <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">height</span><span class="o">][</span><span class="n">width</span><span class="o">];</span>
            <span class="n">visited</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">height</span><span class="o">][</span><span class="n">width</span><span class="o">];</span>


            <span class="k">if</span><span class="o">(</span><span class="n">width</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">height</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="nc">IntStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">height</span><span class="o">).</span><span class="na">toArray</span><span class="o">()){</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">:</span> <span class="nc">IntStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">).</span><span class="na">toArray</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="nc">IntStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">height</span><span class="o">).</span><span class="na">toArray</span><span class="o">()){</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">:</span> <span class="nc">IntStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">width</span><span class="o">).</span><span class="na">toArray</span><span class="o">()){</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">visited</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                        <span class="no">DFS</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
                        <span class="n">result1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">result2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">result1</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">result2</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<h2 id="Î¨∏Ï†ú"><strong>Î¨∏Ï†ú</strong></h2>

<p>Ï†ïÏÇ¨Í∞ÅÌòïÏúºÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ ÏûàÎäî ÏÑ¨Í≥º Î∞îÎã§ ÏßÄÎèÑÍ∞Ä Ï£ºÏñ¥ÏßÑÎã§. ÏÑ¨Ïùò Í∞úÏàòÎ•º ÏÑ∏Îäî ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÏûëÏÑ±ÌïòÏãúÏò§.</p>

<p><img src="https://www.acmicpc.net/upload/images/island.png" alt="image" /></p>

<p>Ìïú Ï†ïÏÇ¨Í∞ÅÌòïÍ≥º Í∞ÄÎ°ú, ÏÑ∏Î°ú ÎòêÎäî ÎåÄÍ∞ÅÏÑ†ÏúºÎ°ú Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî ÏÇ¨Í∞ÅÌòïÏùÄ Í±∏Ïñ¥Í∞à Ïàò ÏûàÎäî ÏÇ¨Í∞ÅÌòïÏù¥Îã§. 
Îëê Ï†ïÏÇ¨Í∞ÅÌòïÏù¥ Í∞ôÏùÄ ÏÑ¨Ïóê ÏûàÏúºÎ†§Î©¥, Ìïú Ï†ïÏÇ¨Í∞ÅÌòïÏóêÏÑú Îã§Î•∏ Ï†ïÏÇ¨Í∞ÅÌòïÏúºÎ°ú Í±∏Ïñ¥ÏÑú Í∞à Ïàò ÏûàÎäî Í≤ΩÎ°úÍ∞Ä ÏûàÏñ¥Ïïº ÌïúÎã§. ÏßÄÎèÑÎäî Î∞îÎã§Î°ú ÎëòÎü¨Ïã∏Ïó¨ ÏûàÏúºÎ©∞, ÏßÄÎèÑ Î∞ñÏúºÎ°ú ÎÇòÍ∞à Ïàò ÏóÜÎã§.</p>

<h2 id="ÏûÖÎ†•"><strong>ÏûÖÎ†•</strong></h2>

<p>ÏûÖÎ†•ÏùÄ Ïó¨Îü¨ Í∞úÏùò ÌÖåÏä§Ìä∏ ÏºÄÏù¥Ïä§Î°ú Ïù¥Î£®Ïñ¥Ï†∏ ÏûàÎã§. Í∞Å ÌÖåÏä§Ìä∏ ÏºÄÏù¥Ïä§Ïùò Ï≤´Ïß∏ Ï§ÑÏóêÎäî ÏßÄÎèÑÏùò ÎÑàÎπÑ wÏôÄ ÎÜíÏù¥ hÍ∞Ä Ï£ºÏñ¥ÏßÑÎã§. wÏôÄ hÎäî 50Î≥¥Îã§ ÏûëÍ±∞ÎÇò Í∞ôÏùÄ ÏñëÏùò Ï†ïÏàòÏù¥Îã§.
ÎëòÏß∏ Ï§ÑÎ∂ÄÌÑ∞ hÍ∞ú Ï§ÑÏóêÎäî ÏßÄÎèÑÍ∞Ä Ï£ºÏñ¥ÏßÑÎã§. 1ÏùÄ ÎïÖ, 0ÏùÄ Î∞îÎã§Ïù¥Îã§.
ÏûÖÎ†•Ïùò ÎßàÏßÄÎßâ Ï§ÑÏóêÎäî 0Ïù¥ Îëê Í∞ú Ï£ºÏñ¥ÏßÑÎã§.</p>

<h2 id="Ï∂úÎ†•"><strong>Ï∂úÎ†•</strong></h2>

<p>Í∞Å ÌÖåÏä§Ìä∏ ÏºÄÏù¥Ïä§Ïóê ÎåÄÌï¥ÏÑú, ÏÑ¨Ïùò Í∞úÏàòÎ•º Ï∂úÎ†•ÌïúÎã§.</p>

<h2 id="ÏòàÏãú"><strong>ÏòàÏãú</strong></h2>

<ul>
  <li>ÏûÖÎ†•</li>
</ul>

<pre>
    1 1
    0
    2 2
    0 1
    1 0
    3 2
    1 1 1
    1 1 1
    5 4
    1 0 1 0 0
    1 0 0 0 0
    1 0 1 0 1
    1 0 0 1 0
    5 4
    1 1 1 0 1
    1 0 1 0 1
    1 0 1 0 1
    1 0 1 1 1
    5 5
    1 0 1 0 1
    0 0 0 0 0
    1 0 1 0 1
    0 0 0 0 0
    1 0 1 0 1
    0 0
</pre>

<p>-Ï∂úÎ†•</p>

<pre>
    0
    1
    1
    3
    1
    9
</pre>

<h2 id="Í∏∞Î≥∏-Ïª®ÏÖâ"><strong>Í∏∞Î≥∏ Ïª®ÏÖâ</strong></h2>

<blockquote>
  <p>Í∏∞Î≥∏Ï†ÅÏù∏ Ïù∏Ï†ëÌñâÎ†¨ÏóêÏÑúÏùò DFS</p>
</blockquote>

<ul>
  <li>DFSÎ•º ÏôÑÎ£åÌïòÍ≥† ÎÇúÌõÑ Í∑∏ Îã§Ïùå ÏÑ¨ÏúºÎ°ú Ï†ëÍ∑ºÌï¥ÏÑú visitedÍ∞Ä ÎêòÏñ¥ ÏûàÏßÄ ÏïäÏúºÎ©¥ result + 1</li>
</ul>
:ET