I"ù=<h1 id="ÌÜ†ÎßàÌÜ†"><strong>ÌÜ†ÎßàÌÜ†</strong></h1>
<hr />

<h2 id="ÏΩîÎìú"><strong>ÏΩîÎìú</strong></h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
</pre></td> --><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Point</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">i</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">j</span><span class="o">;</span>
        <span class="nc">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">j</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span><span class="o">;</span>

    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">di</span> <span class="o">=</span> <span class="o">{-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">};</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dj</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">};</span>

    <span class="kd">static</span> <span class="kt">int</span> <span class="n">width</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="n">height</span><span class="o">;</span>

    <span class="kd">static</span> <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Point</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">static</span> <span class="kt">int</span> <span class="nf">BFS</span><span class="o">()</span> <span class="o">{</span>

        <span class="nc">Point</span> <span class="n">cur</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

        <span class="k">while</span><span class="o">(!</span><span class="n">queue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">cur</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">nextI</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">i</span> <span class="o">+</span> <span class="n">di</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                <span class="kt">int</span> <span class="n">nextJ</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">j</span> <span class="o">+</span> <span class="n">dj</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>

                <span class="k">if</span><span class="o">(</span><span class="n">nextI</span><span class="o">&lt;</span><span class="n">height</span> <span class="o">&amp;&amp;</span> <span class="n">nextJ</span><span class="o">&lt;</span><span class="n">width</span> <span class="o">&amp;&amp;</span> <span class="n">nextI</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">nextJ</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">nextI</span><span class="o">][</span><span class="n">nextJ</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">map</span><span class="o">[</span><span class="n">nextI</span><span class="o">][</span><span class="n">nextJ</span><span class="o">]</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">cur</span><span class="o">.</span><span class="na">i</span><span class="o">][</span><span class="n">cur</span><span class="o">.</span><span class="na">j</span><span class="o">]</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
                        <span class="n">queue</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Point</span><span class="o">(</span><span class="n">nextI</span><span class="o">,</span> <span class="n">nextJ</span><span class="o">));</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">height</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">width</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">cur</span><span class="o">.</span><span class="na">i</span><span class="o">][</span><span class="n">cur</span><span class="o">.</span><span class="na">j</span><span class="o">];</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
	<span class="c1">// write your code here</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="n">width</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="n">height</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

        <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">height</span><span class="o">][</span><span class="n">width</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">height</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">width</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="n">queue</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Point</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="no">BFS</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<h2 id="Î¨∏Ï†ú"><strong>Î¨∏Ï†ú</strong></h2>

<p>Ï≤†ÏàòÏùò ÌÜ†ÎßàÌÜ† ÎÜçÏû•ÏóêÏÑúÎäî ÌÜ†ÎßàÌÜ†Î•º Î≥¥Í¥ÄÌïòÎäî ÌÅ∞ Ï∞ΩÍ≥†Î•º Í∞ÄÏßÄÍ≥† ÏûàÎã§. ÌÜ†ÎßàÌÜ†Îäî ÏïÑÎûòÏùò Í∑∏Î¶ºÍ≥º Í∞ôÏù¥ Í≤©Ïûê Î™®Ïñë ÏÉÅÏûêÏùò Ïπ∏Ïóê ÌïòÎÇòÏî© ÎÑ£Ïñ¥ÏÑú Ï∞ΩÍ≥†Ïóê Î≥¥Í¥ÄÌïúÎã§.</p>

<p>Ï∞ΩÍ≥†Ïóê Î≥¥Í¥ÄÎêòÎäî ÌÜ†ÎßàÌÜ†Îì§ Ï§ëÏóêÎäî Ïûò ÏùµÏùÄ Í≤ÉÎèÑ ÏûàÏßÄÎßå, ÏïÑÏßÅ ÏùµÏßÄ ÏïäÏùÄ ÌÜ†ÎßàÌÜ†Îì§ÎèÑ ÏûàÏùÑ Ïàò ÏûàÎã§. Î≥¥Í¥Ä ÌõÑ ÌïòÎ£®Í∞Ä ÏßÄÎÇòÎ©¥, ÏùµÏùÄ ÌÜ†ÎßàÌÜ†Îì§Ïùò Ïù∏Ï†ëÌïú Í≥≥Ïóê ÏûàÎäî ÏùµÏßÄ ÏïäÏùÄ ÌÜ†ÎßàÌÜ†Îì§ÏùÄ ÏùµÏùÄ ÌÜ†ÎßàÌÜ†Ïùò ÏòÅÌñ•ÏùÑ Î∞õÏïÑ ÏùµÍ≤å ÎêúÎã§. ÌïòÎÇòÏùò ÌÜ†ÎßàÌÜ†Ïùò Ïù∏Ï†ëÌïú Í≥≥ÏùÄ ÏôºÏ™Ω, Ïò§Î•∏Ï™Ω, Ïïû, Îí§ ÎÑ§ Î∞©Ìñ•Ïóê ÏûàÎäî ÌÜ†ÎßàÌÜ†Î•º ÏùòÎØ∏ÌïúÎã§. ÎåÄÍ∞ÅÏÑ† Î∞©Ìñ•Ïóê ÏûàÎäî ÌÜ†ÎßàÌÜ†Îì§ÏóêÍ≤åÎäî ÏòÅÌñ•ÏùÑ Ï£ºÏßÄ Î™ªÌïòÎ©∞, ÌÜ†ÎßàÌÜ†Í∞Ä ÌòºÏûê Ï†ÄÏ†àÎ°ú ÏùµÎäî Í≤ΩÏö∞Îäî ÏóÜÎã§Í≥† Í∞ÄÏ†ïÌïúÎã§. Ï≤†ÏàòÎäî Ï∞ΩÍ≥†Ïóê Î≥¥Í¥ÄÎêú ÌÜ†ÎßàÌÜ†Îì§Ïù¥ Î©∞Ïπ†Ïù¥ ÏßÄÎÇòÎ©¥ Îã§ ÏùµÍ≤å ÎêòÎäîÏßÄ, Í∑∏ ÏµúÏÜå ÏùºÏàòÎ•º ÏïåÍ≥† Ïã∂Ïñ¥ ÌïúÎã§.</p>

<p>ÌÜ†ÎßàÌÜ†Î•º Ï∞ΩÍ≥†Ïóê Î≥¥Í¥ÄÌïòÎäî Í≤©ÏûêÎ™®ÏñëÏùò ÏÉÅÏûêÎì§Ïùò ÌÅ¨Í∏∞ÏôÄ ÏùµÏùÄ ÌÜ†ÎßàÌÜ†Îì§Í≥º ÏùµÏßÄ ÏïäÏùÄ ÌÜ†ÎßàÌÜ†Îì§Ïùò Ï†ïÎ≥¥Í∞Ä Ï£ºÏñ¥Ï°åÏùÑ Îïå, Î©∞Ïπ†Ïù¥ ÏßÄÎÇòÎ©¥ ÌÜ†ÎßàÌÜ†Îì§Ïù¥ Î™®Îëê ÏùµÎäîÏßÄ, Í∑∏ ÏµúÏÜå ÏùºÏàòÎ•º Íµ¨ÌïòÎäî ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÏûëÏÑ±ÌïòÎùº. Îã®, ÏÉÅÏûêÏùò ÏùºÎ∂Ä Ïπ∏ÏóêÎäî ÌÜ†ÎßàÌÜ†Í∞Ä Îì§Ïñ¥ÏûàÏßÄ ÏïäÏùÑ ÏàòÎèÑ ÏûàÎã§.</p>

<h2 id="ÏûÖÎ†•"><strong>ÏûÖÎ†•</strong></h2>

<p>Ï≤´ Ï§ÑÏóêÎäî ÏÉÅÏûêÏùò ÌÅ¨Í∏∞Î•º ÎÇòÌÉÄÎÇ¥Îäî Îëê Ï†ïÏàò M,NÏù¥ Ï£ºÏñ¥ÏßÑÎã§. MÏùÄ ÏÉÅÏûêÏùò Í∞ÄÎ°ú Ïπ∏Ïùò Ïàò, NÏùÄ ÏÉÅÏûêÏùò ÏÑ∏Î°ú Ïπ∏Ïùò ÏàòÎ•º ÎÇòÌÉÄÎÇ∏Îã§. Îã®, 2 ‚â§ M,N ‚â§ 1,000 Ïù¥Îã§. ÎëòÏß∏ Ï§ÑÎ∂ÄÌÑ∞Îäî ÌïòÎÇòÏùò ÏÉÅÏûêÏóê Ï†ÄÏû•Îêú ÌÜ†ÎßàÌÜ†Îì§Ïùò Ï†ïÎ≥¥Í∞Ä Ï£ºÏñ¥ÏßÑÎã§. Ï¶â, ÎëòÏß∏ Ï§ÑÎ∂ÄÌÑ∞ NÍ∞úÏùò Ï§ÑÏóêÎäî ÏÉÅÏûêÏóê Îã¥Í∏¥ ÌÜ†ÎßàÌÜ†Ïùò Ï†ïÎ≥¥Í∞Ä Ï£ºÏñ¥ÏßÑÎã§. ÌïòÎÇòÏùò Ï§ÑÏóêÎäî ÏÉÅÏûê Í∞ÄÎ°úÏ§ÑÏóê Îì§Ïñ¥ÏûàÎäî ÌÜ†ÎßàÌÜ†Ïùò ÏÉÅÌÉúÍ∞Ä MÍ∞úÏùò Ï†ïÏàòÎ°ú Ï£ºÏñ¥ÏßÑÎã§. Ï†ïÏàò 1ÏùÄ ÏùµÏùÄ ÌÜ†ÎßàÌÜ†, Ï†ïÏàò 0ÏùÄ ÏùµÏßÄ ÏïäÏùÄ ÌÜ†ÎßàÌÜ†, Ï†ïÏàò -1ÏùÄ ÌÜ†ÎßàÌÜ†Í∞Ä Îì§Ïñ¥ÏûàÏßÄ ÏïäÏùÄ Ïπ∏ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.</p>

<h2 id="Ï∂úÎ†•"><strong>Ï∂úÎ†•</strong></h2>

<p>Ïó¨Îü¨Î∂ÑÏùÄ ÌÜ†ÎßàÌÜ†Í∞Ä Î™®Îëê ÏùµÏùÑ ÎïåÍπåÏßÄÏùò ÏµúÏÜå ÎÇ†ÏßúÎ•º Ï∂úÎ†•Ìï¥Ïïº ÌïúÎã§. ÎßåÏïΩ, Ï†ÄÏû•Îê† ÎïåÎ∂ÄÌÑ∞ Î™®Îì† ÌÜ†ÎßàÌÜ†Í∞Ä ÏùµÏñ¥ÏûàÎäî ÏÉÅÌÉúÏù¥Î©¥ 0ÏùÑ Ï∂úÎ†•Ìï¥Ïïº ÌïòÍ≥†, ÌÜ†ÎßàÌÜ†Í∞Ä Î™®Îëê ÏùµÏßÄÎäî Î™ªÌïòÎäî ÏÉÅÌô©Ïù¥Î©¥ -1ÏùÑ Ï∂úÎ†•Ìï¥Ïïº ÌïúÎã§.</p>

<h2 id="ÏòàÏãú"><strong>ÏòàÏãú</strong></h2>

<ul>
  <li>ÏûÖÎ†•</li>
</ul>

<pre>
    6 4
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 1
</pre>

<p>-Ï∂úÎ†•</p>

<pre>
    8
</pre>

<h2 id="Í∏∞Î≥∏-Ïª®ÏÖâ"><strong>Í∏∞Î≥∏ Ïª®ÏÖâ</strong></h2>

<blockquote>
  <p>Í∏∞Î≥∏Ï†ÅÏù∏ Ïù∏Ï†ëÌñâÎ†¨ÏóêÏÑúÏùò BFS</p>
</blockquote>

<ul>
  <li>BFSÎ•º ÏßÑÌñâÌïòÎ©¥ÏÑú Îã§Ïùå DepthÏóê Î∞©Î¨∏Ìï†Îïå Ïóê (Ï†ÑÏùò depthÏóê ÏûàÎçò ÎÖ∏Îìú Ïùò Ïàò) + 1ÏùÑ ÌïòÎ©∞ ÏßÑÌñâÌïòÎ©¥ BFSÎ•º ÌïòÎ©∞ DepthÎ•º ÌôïÏù∏ Í∞ÄÎä•ÌïòÎã§.
    <ul>
      <li>Ï≤òÏùåÏóê curÏù¥ ÌòÑÏû¨ ÎΩëÏùÄ ÎÖ∏ÎìúÏù¥Í≥† Í∑∏ ÎÖ∏ÎìúÏóê Ïó∞Í≤∞Îêú Î™®Îì† ÎÖ∏ÎìúÎì§ÏùÄ Îã§Ïùå DepthÏóê Ìï¥ÎãπÌïòÎäî ÎÖ∏ÎìúÏù¥ÎØÄÎ°ú (cur ÏúÑÏπò) + 1 ÌïòÎ©¥ ÎêúÎã§.</li>
      <li>Í∑∏Î¶¨Í≥† ÎßàÏßÄÎßâÏóê curÏù¥ ÎßàÏßÄÎßâ ÎÖ∏ÎìúÍ∞Ä Î∞©Î¨∏ ÎêòÏóàÏùÑ Îïå(Î™®Îì† ÌÜ†ÎßàÌÜ†Í∞Ä ÏùµÏóàÏùÑ Îïå)Ïù¥ÎØÄÎ°ú Í∑∏ÎïåÏùò depthÎ•º Ï∂úÎ†•</li>
    </ul>
  </li>
  <li>for Î¨∏ÏùÄ Î™®Îì† ÌÜ†ÎßàÌÜ†Í∞Ä ÏùµÏóàÎäîÏßÄ ÌôïÏù∏ÌïòÎäî Í≥≥</li>
</ul>
:ET